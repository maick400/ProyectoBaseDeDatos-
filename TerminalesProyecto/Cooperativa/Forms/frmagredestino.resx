<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9wjC/wG5I7LnUG+ogwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAPpJREFUSEvllSESAjEMReuQSI6ARHIEJEdAcgQkDskROAISiUQikUgkEgv/i8xk
        2t9timN4M0+l6WyTppv+gincwnPmHs7g14zhAb4bnuAEdrGAD6g2VD7hCobg5mqTiGs4CMvS8+W5L8ie
        VWnV3FAx8wIlvBEqwWuomFf2YwfVYq+hYt4jLODR1GKvoWJe9rHgDvOFUfI8matuT5Q8T+ZeoVroNVTM
        y8EriDwLhop5+VYVRCbYUDEvH8eCEWyVyVAxk72sPn4cNo67Soy6hINsoEqMyD6GiEx1LjdnmcPM4Q2q
        zby8ks2y1OAXsWTqGeGF4Em7/2a/REofi8sQIe3MvhMAAAAASUVORK5CYII=
</value>
  </data>
</root>